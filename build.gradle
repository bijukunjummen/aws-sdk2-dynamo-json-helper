buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
    }
}

plugins {
    id 'java-library'
    id 'maven-publish'
    id 'maven'
    id 'signing'
    id 'nebula.release' version '15.2.0'
}

group = 'com.github.bijukunjummen'
sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

ext {
    jacksonBom = "2.11.3"
    junitVersion = "5.3.2"
    assertJVersion = "3.16.1"
    testContainersVersion = "1.15.0"
    jsonAssertVersion = "1.5.0"
    awsSdkVersion = "2.15.25"
}
repositories {
    mavenCentral()
}

dependencies {
    api("com.fasterxml.jackson.core:jackson-core:${jacksonBom}")
    api("com.fasterxml.jackson.core:jackson-databind:${jacksonBom}")
    api("software.amazon.awssdk:dynamodb:${awsSdkVersion}")
    testImplementation("org.assertj:assertj-core:$assertJVersion")
    testImplementation("org.junit.jupiter:junit-jupiter-api:$junitVersion")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:$junitVersion")
    testImplementation("org.testcontainers:testcontainers:${testContainersVersion}")
    testImplementation("org.testcontainers:localstack:${testContainersVersion}")
    testImplementation("org.skyscreamer:jsonassert:${jsonAssertVersion}")
}

test {
    useJUnitPlatform()
}

task javadocJar(type: Jar) {
    archiveClassifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    archiveClassifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

signing {
    sign configurations.archives
}

tasks.snapshot {
    finalizedBy tasks.uploadArchives
}

tasks.candidate {
    finalizedBy tasks.uploadArchives
}

tasks.final {
    finalizedBy tasks.uploadArchives
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            pom.project {
                name project.name
                packaging 'jar'
                description 'Utility for converting a JSON to AWS SDK2 AttributeValue and back'
                url 'https://github.com/bijukunjummen/aws-sdk2-dynamo-json-helper.git'

                scm {
                    connection 'scm:git:https://github.com/bijukunjummen/aws-sdk2-dynamo-json-helper'
                    developerConnection 'scm:git:https://github.com/bijukunjummen/aws-sdk2-dynamo-json-helper'
                    url 'https://github.com/bijukunjummen/aws-sdk2-dynamo-json-helper'
                }

                licenses {
                    license {
                        name 'The Apache License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id 'bijukunjummen'
                        name 'Biju Kunjummen'
                        email 'biju.kunjummen@gmail.com'
                    }
                }
            }
        }
    }
}